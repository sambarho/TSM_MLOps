name: pytest

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.10', '3.11']  # Test multiple Python versions
            fail-fast: false  # Continue with other versions even if one fails
    
        steps:
        - uses: actions/checkout@v4
    
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        # Cache pip dependencies
        - name: Cache pip dependencies
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
    
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install pytest-cov flake8  # Install additional test dependencies
    
        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
        - name: Run tests with coverage
          run: |
            pytest --maxfail=1 --disable-warnings -v --cov=tsm_mlops --cov-report=xml

        - name: Upload coverage report
          if: always()  # Try to upload even if tests fail
          uses: actions/upload-artifact@v4  # Updated to v4
          with:
            name: coverage-report-py${{ matrix.python-version }}
            path: coverage.xml
            if-no-files-found: warn  # Don't fail if no coverage report
